<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:annotation-config />

	<!-- DATABASE SETUP -->

	<!-- PostgreSQL authentication dataSource configuration -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/esh_document_repository" />
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
	</bean>

	<!-- Entity Manager Factory configuration -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="doc-repository" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter" />
		</property>
		<!-- TODO: Activate weaving. Improves performance -->
		<property name="jpaPropertyMap">
		  <map>
		    <entry key="eclipselink.weaving" value="false"/>
		  </map>
		</property>
	</bean>

	<!-- Define the transaction manager. The entity manager has one property that is the entity manager factory. -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- SPRING SECURITY SETUP -->
	
	<!-- Define the password encoder. Use BCrypt encoder. Default strength is 10 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- Define the user details service bean. Load users from the database -->
	<bean id="userDao" class="com.esh.docrepository.dao.UserDaoImpl"/>
	<!-- Define the authentication manager -->
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDao">
			<security:password-encoder ref="bcryptPasswordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Define the actual resources restrictions -->
	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/docrepo/user/login" access="permitAll" />
		<security:intercept-url method="GET" pattern="/docrepo/myresource/**" access="hasRole('USER_ROLE')" />
		<security:intercept-url method="PUT" pattern="/docrepo/myresource/**" access="hasRole('ADMIN_ROLE')" />
		<security:intercept-url method="POST" pattern="/docrepo/myresource/**" access="hasRole('ADMIN_ROLE')" />
		<security:intercept-url method="DELETE" pattern="/docrepo/myresource/**" access="hasRole('ADMIN_ROLE')" />
	</security:http>
	
	<!-- Entry point to avoid the login page redirection. Called when the user has not been authenticated in authenticationTokenProcessingFilter -->
	<bean id="unauthorizedEntryPoint" class="com.esh.docrepository.security.UnauthorizedEntryPoint" />

	<!-- Authenticates the user in each request -->
	<bean  id="authenticationTokenProcessingFilter" class="com.esh.docrepository.security.AuthenticationTokenProcessingFilter">
		<constructor-arg ref="userDao" />
	</bean>
	
	<!-- BEAN SCAN-->
	<context:component-scan base-package="com.esh.docrepository.resources" />
	<context:component-scan base-package="com.esh.docrepository.dao" />
	
</beans>